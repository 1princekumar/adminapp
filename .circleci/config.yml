######
## https://github.com/forcedotcom/sfdx-circleci-org/blob/master/.circleci/config.yml
######

auth: &auth
    - run:
        name: Authorize Target Deployment Org
        context: DEV
        command: |
          #Authorize target org
          sfdx force:auth:jwt:grant --instanceurl $ENDPOINT  --clientid $CONSUMER_KEY --jwtkeyfile $JWT_KEY --username $USER_NAME --setalias dev -d 
deploy: &deploy
    - run:
        name: Deploy to Target Deployment Org
        command: |
          #Deploy to target deployment org and run unit tests. 
          sfdx force:mdapi:deploy --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL
      
      #Example shows how to run a check only deploy.
      #sfdx force:mdapi:deploy --checkonly --wait 10 --deploydir $DEPLOYDIR --targetusername UAT --testlevel $TESTLEVEL


version: 2
jobs: 
  build: 
    docker:
      - image: circleci/node:8.9.4
    environment:
      # from https://developer.salesforce.com/docs/atlas.en-us.sfdx_setup.meta/sfdx_setup/sfdx_setup_install_cli_standalone.htm
      # and https://developer.salesforce.com/media/salesforce-cli/manifest.json

      # Variables used in build steps
      - DX_CLI_URL: https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
      - TESTLEVEL: RunLocalTests
      - DEPLOYDIR: src

    steps:
      - checkout
      - run:
          name: "Create SFDX Folder" 
          command: |
            mkdir sfdx

      - run:
          name: Download CLI
          command: |
            # Download cli
            wget -qO- $DX_CLI_URL | tar xJ -C sfdx --strip-components 1

      - run:
          name: Install CLI
          command: |
            # Install the cli
            ./sfdx/install
            sfdx

      #- run:
       #   name: Decrypt server key
        #  command: |
         #   #Decrypt server key
          #  openssl enc -nosalt -aes-256-cbc -d -in jwt/server.key.enc -out jwt/server.key -base64 -K $DECRYPTION_KEY -iv $DECRYPTION_IV
      
      workflows:
        version: 1
        pipeline:
          jobs:
          - checkout
          - deploy:
            requires: [ checkout ]
            context: DEV
          
          - deployDEV:
              requires: [ deploy ]
              context: TEST
                filters:
                  branches:
                    only: playground